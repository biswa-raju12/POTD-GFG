/* Trapping Rain Water */


class Solution {
    public int maxWater(int arr[]) {
        int[] leftHighest = new int[arr.length];
        int[] rightHighest = new int[arr.length];
        
        int max =arr[0];
        leftHighest[0]=max;
        for(int i=1;i<arr.length;i++)
        {
            if(max<arr[i])
            {
                leftHighest[i] = arr[i];
                max = arr[i];
            }
            else
            {
                leftHighest[i]=max;
            }
        }
        
        max =arr[arr.length-1];
        rightHighest[arr.length-1]=max;
        for(int i=arr.length-2;i>=0;i--)
        {
            if(max<arr[i])
            {
                rightHighest[i] = arr[i];
                max = arr[i];
            }
            else
            {
                rightHighest[i]=max;
            }
        }
        
        
        int trappedWater =0;
        
        
        for(int i=0;i<arr.length;i++)
        {
            int minHeight = Math.min(leftHighest[i],rightHighest[i]);
            
            
            trappedWater += (minHeight - arr[i]);
        }
        
        return trappedWater;
    }
}
